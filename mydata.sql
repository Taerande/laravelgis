--
-- PostgreSQL database dump
--

-- Dumped from database version 15.2
-- Dumped by pg_dump version 15.2

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: topology; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA topology;


ALTER SCHEMA topology OWNER TO postgres;

--
-- Name: SCHEMA topology; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON SCHEMA topology IS 'PostGIS Topology schema';


--
-- Name: postgis; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS postgis WITH SCHEMA public;


--
-- Name: EXTENSION postgis; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION postgis IS 'PostGIS geometry and geography spatial types and functions';


--
-- Name: postgis_topology; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS postgis_topology WITH SCHEMA topology;


--
-- Name: EXTENSION postgis_topology; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION postgis_topology IS 'PostGIS topology spatial types and functions';


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: admins; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.admins (
    id bigint NOT NULL,
    name character varying(255) NOT NULL,
    email character varying(255) NOT NULL,
    email_verified_at timestamp(0) without time zone,
    password character varying(255) NOT NULL,
    remember_token character varying(100),
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone
);


ALTER TABLE public.admins OWNER TO postgres;

--
-- Name: admins_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.admins_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.admins_id_seq OWNER TO postgres;

--
-- Name: admins_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.admins_id_seq OWNED BY public.admins.id;


--
-- Name: customers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.customers (
    id bigint NOT NULL,
    name character varying(255) NOT NULL,
    email character varying(255) NOT NULL,
    email_verified_at timestamp(0) without time zone,
    password character varying(255) NOT NULL,
    remember_token character varying(100),
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone
);


ALTER TABLE public.customers OWNER TO postgres;

--
-- Name: customers_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.customers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.customers_id_seq OWNER TO postgres;

--
-- Name: customers_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.customers_id_seq OWNED BY public.customers.id;


--
-- Name: edges; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.edges (
    id bigint NOT NULL,
    from_node_id bigint NOT NULL,
    to_node_id bigint NOT NULL,
    weight double precision DEFAULT '0'::double precision NOT NULL
);


ALTER TABLE public.edges OWNER TO postgres;

--
-- Name: edges_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.edges_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.edges_id_seq OWNER TO postgres;

--
-- Name: edges_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.edges_id_seq OWNED BY public.edges.id;


--
-- Name: failed_jobs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.failed_jobs (
    id bigint NOT NULL,
    uuid character varying(255) NOT NULL,
    connection text NOT NULL,
    queue text NOT NULL,
    payload text NOT NULL,
    exception text NOT NULL,
    failed_at timestamp(0) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE public.failed_jobs OWNER TO postgres;

--
-- Name: failed_jobs_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.failed_jobs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.failed_jobs_id_seq OWNER TO postgres;

--
-- Name: failed_jobs_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.failed_jobs_id_seq OWNED BY public.failed_jobs.id;


--
-- Name: menu_order; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.menu_order (
    order_id bigint NOT NULL,
    menu_id bigint NOT NULL,
    amount smallint DEFAULT '1'::smallint NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone
);


ALTER TABLE public.menu_order OWNER TO postgres;

--
-- Name: menus; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.menus (
    id bigint NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    shop_id bigint NOT NULL,
    price integer DEFAULT 0 NOT NULL,
    status character varying(255) DEFAULT 'ready'::character varying NOT NULL,
    name character varying(64) NOT NULL,
    description character varying(256) NOT NULL,
    img_url character varying(255),
    CONSTRAINT menus_status_check CHECK (((status)::text = ANY ((ARRAY['ready'::character varying, 'sold_out'::character varying, 'open'::character varying])::text[])))
);


ALTER TABLE public.menus OWNER TO postgres;

--
-- Name: menus_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.menus_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.menus_id_seq OWNER TO postgres;

--
-- Name: menus_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.menus_id_seq OWNED BY public.menus.id;


--
-- Name: migrations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.migrations (
    id integer NOT NULL,
    migration character varying(255) NOT NULL,
    batch integer NOT NULL
);


ALTER TABLE public.migrations OWNER TO postgres;

--
-- Name: migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.migrations_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.migrations_id_seq OWNER TO postgres;

--
-- Name: migrations_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.migrations_id_seq OWNED BY public.migrations.id;


--
-- Name: nodes; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.nodes (
    id bigint NOT NULL,
    name character varying(255) NOT NULL,
    node public.geography(Geometry,4326) NOT NULL
);


ALTER TABLE public.nodes OWNER TO postgres;

--
-- Name: nodes_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.nodes_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.nodes_id_seq OWNER TO postgres;

--
-- Name: nodes_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.nodes_id_seq OWNED BY public.nodes.id;


--
-- Name: orders; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.orders (
    id bigint NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    shop_id bigint NOT NULL,
    customer_id bigint NOT NULL,
    price integer DEFAULT 0 NOT NULL,
    comment character varying(64),
    location public.geography(Geometry,4326) NOT NULL,
    status character varying(255) DEFAULT 'ready'::character varying NOT NULL,
    CONSTRAINT orders_status_check CHECK (((status)::text = ANY ((ARRAY['ready'::character varying, 'depart'::character varying, 'arrive'::character varying])::text[])))
);


ALTER TABLE public.orders OWNER TO postgres;

--
-- Name: orders_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.orders_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.orders_id_seq OWNER TO postgres;

--
-- Name: orders_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.orders_id_seq OWNED BY public.orders.id;


--
-- Name: password_resets; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.password_resets (
    email character varying(255) NOT NULL,
    token character varying(255) NOT NULL,
    created_at timestamp(0) without time zone
);


ALTER TABLE public.password_resets OWNER TO postgres;

--
-- Name: personal_access_tokens; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.personal_access_tokens (
    id bigint NOT NULL,
    tokenable_type character varying(255) NOT NULL,
    tokenable_id bigint NOT NULL,
    name character varying(255) NOT NULL,
    token character varying(64) NOT NULL,
    abilities text,
    last_used_at timestamp(0) without time zone,
    expires_at timestamp(0) without time zone,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone
);


ALTER TABLE public.personal_access_tokens OWNER TO postgres;

--
-- Name: personal_access_tokens_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.personal_access_tokens_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.personal_access_tokens_id_seq OWNER TO postgres;

--
-- Name: personal_access_tokens_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.personal_access_tokens_id_seq OWNED BY public.personal_access_tokens.id;


--
-- Name: reviews; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.reviews (
    id bigint NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    shop_id bigint NOT NULL,
    customer_id bigint NOT NULL,
    img_url character varying(255),
    description character varying(256),
    star smallint DEFAULT '0'::smallint NOT NULL
);


ALTER TABLE public.reviews OWNER TO postgres;

--
-- Name: reviews_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.reviews_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.reviews_id_seq OWNER TO postgres;

--
-- Name: reviews_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.reviews_id_seq OWNED BY public.reviews.id;


--
-- Name: shops; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.shops (
    id bigint NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    name character varying(64) NOT NULL,
    description character varying(256),
    admin_id bigint NOT NULL,
    contact character varying(255) NOT NULL,
    address character varying(255) NOT NULL,
    status character varying(255),
    location public.geography(Geometry,4326) NOT NULL,
    CONSTRAINT shops_status_check CHECK (((status)::text = ANY ((ARRAY['ready'::character varying, 'open'::character varying, 'close'::character varying])::text[])))
);


ALTER TABLE public.shops OWNER TO postgres;

--
-- Name: shops_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.shops_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.shops_id_seq OWNER TO postgres;

--
-- Name: shops_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.shops_id_seq OWNED BY public.shops.id;


--
-- Name: admins id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.admins ALTER COLUMN id SET DEFAULT nextval('public.admins_id_seq'::regclass);


--
-- Name: customers id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customers ALTER COLUMN id SET DEFAULT nextval('public.customers_id_seq'::regclass);


--
-- Name: edges id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.edges ALTER COLUMN id SET DEFAULT nextval('public.edges_id_seq'::regclass);


--
-- Name: failed_jobs id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.failed_jobs ALTER COLUMN id SET DEFAULT nextval('public.failed_jobs_id_seq'::regclass);


--
-- Name: menus id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.menus ALTER COLUMN id SET DEFAULT nextval('public.menus_id_seq'::regclass);


--
-- Name: migrations id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.migrations ALTER COLUMN id SET DEFAULT nextval('public.migrations_id_seq'::regclass);


--
-- Name: nodes id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.nodes ALTER COLUMN id SET DEFAULT nextval('public.nodes_id_seq'::regclass);


--
-- Name: orders id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.orders ALTER COLUMN id SET DEFAULT nextval('public.orders_id_seq'::regclass);


--
-- Name: personal_access_tokens id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.personal_access_tokens ALTER COLUMN id SET DEFAULT nextval('public.personal_access_tokens_id_seq'::regclass);


--
-- Name: reviews id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reviews ALTER COLUMN id SET DEFAULT nextval('public.reviews_id_seq'::regclass);


--
-- Name: shops id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shops ALTER COLUMN id SET DEFAULT nextval('public.shops_id_seq'::regclass);


--
-- Data for Name: admins; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.admins (id, name, email, email_verified_at, password, remember_token, created_at, updated_at) FROM stdin;
1	Kellie Johns Jr.	pearline.runolfsdottir@example.org	2023-05-10 07:11:02	$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi	r6AdZouRCA	2023-05-10 07:11:02	2023-05-10 07:11:02
2	Maureen Lockman	bert.keebler@example.net	2023-05-10 07:11:02	$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi	LV9CR0UPvx	2023-05-10 07:11:02	2023-05-10 07:11:02
3	Ben Fahey	dibbert.nicole@example.org	2023-05-10 07:11:02	$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi	IpinLTNkA5	2023-05-10 07:11:02	2023-05-10 07:11:02
4	Michele Gerhold	russ10@example.com	2023-05-10 07:11:02	$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi	iP0DxlaR52	2023-05-10 07:11:02	2023-05-10 07:11:02
5	Nora Kuvalis I	ideckow@example.com	2023-05-10 07:11:02	$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi	SgZ6QFarNf	2023-05-10 07:11:02	2023-05-10 07:11:02
6	Ignacio Murazik III	nelda04@example.net	2023-05-10 07:11:02	$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi	2XwUQuasT3	2023-05-10 07:11:02	2023-05-10 07:11:02
7	Ashley Raynor	bupton@example.net	2023-05-10 07:11:02	$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi	X2y4M0RTWc	2023-05-10 07:11:02	2023-05-10 07:11:02
8	Ruben Nader IV	presley.cronin@example.com	2023-05-10 07:11:02	$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi	Z7yNutxW00	2023-05-10 07:11:02	2023-05-10 07:11:02
9	Howell Ledner	manley.botsford@example.com	2023-05-10 07:11:02	$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi	iCaMxIuJAW	2023-05-10 07:11:02	2023-05-10 07:11:02
10	Jacklyn Schaden	kquitzon@example.net	2023-05-10 07:11:02	$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi	8Nom9a2fQB	2023-05-10 07:11:02	2023-05-10 07:11:02
\.


--
-- Data for Name: customers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.customers (id, name, email, email_verified_at, password, remember_token, created_at, updated_at) FROM stdin;
1	Ardith Purdy	kuhn.rita@example.org	2023-05-10 07:11:02	$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi	Ao7DMIQSLc	2023-05-10 07:11:02	2023-05-10 07:11:02
2	Raheem Quigley	viva.rice@example.net	2023-05-10 07:11:02	$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi	lzMIoqefTI	2023-05-10 07:11:02	2023-05-10 07:11:02
3	Rubie Schultz	carrie32@example.org	2023-05-10 07:11:02	$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi	03zGXh06oD	2023-05-10 07:11:02	2023-05-10 07:11:02
4	Devante Kling	aliya04@example.com	2023-05-10 07:11:02	$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi	vJ8GWrrFjv	2023-05-10 07:11:02	2023-05-10 07:11:02
5	Carolanne Schinner	lafayette.cassin@example.net	2023-05-10 07:11:02	$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi	TUnkP6jAbt	2023-05-10 07:11:02	2023-05-10 07:11:02
6	Alexandra Schaden	ayla.jacobs@example.com	2023-05-10 07:11:02	$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi	Bi30DysTG2	2023-05-10 07:11:02	2023-05-10 07:11:02
7	Nikko Kovacek	weber.nigel@example.org	2023-05-10 07:11:02	$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi	rB7rdgXapf	2023-05-10 07:11:02	2023-05-10 07:11:02
8	Dr. Meghan Boyer DDS	rashad86@example.net	2023-05-10 07:11:02	$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi	g5Ts67gKdV	2023-05-10 07:11:02	2023-05-10 07:11:02
9	Coleman Rodriguez	baumbach.laurel@example.net	2023-05-10 07:11:02	$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi	bjl3K2dQdm	2023-05-10 07:11:02	2023-05-10 07:11:02
10	Brianne Raynor	osinski.joana@example.net	2023-05-10 07:11:02	$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi	Ab1iGRDFbw	2023-05-10 07:11:02	2023-05-10 07:11:02
\.


--
-- Data for Name: edges; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.edges (id, from_node_id, to_node_id, weight) FROM stdin;
2	1	2	1.6383173716351
3	1	4	1.3355628411795
4	4	3	1.6301012244692
5	5	4	1.5429575168445
6	5	6	1.3406994535665
7	6	1	1.5188480945073
8	7	6	1.8851152400904
9	7	8	1.3041318663362
10	8	9	1.9782214734
11	9	10	1.2982652742627
12	10	7	2.0038750449195
14	8	11	1.5810312157103
15	11	1	0.38954633407575
16	2	3	1.3551221842567
17	2	93	1.259705623006
18	93	88	1.2347354566759
19	88	87	1.2851619450367
20	87	9	1.9194115308887
21	87	90	1.9761760205369
22	90	89	1.3001982612333
23	89	88	1.9969668642208
24	89	91	1.2558407366334
25	89	96	1.4769082961259
26	96	95	1.2701610894081
27	95	90	1.4737831069921
28	96	97	1.261974589902
29	97	91	1.5219785328221
30	97	94	1.2792694591014
31	94	92	1.4912799734791
32	94	98	3.8424420655468
33	92	91	1.2448825106725
34	92	2	2.0507027187307
35	93	91	2.0386558548879
36	98	99	0.98954975840718
37	99	100	2.1872384589457
38	100	101	0.47294962381636
39	101	44	1.1386547301557
40	44	13	0.24904742594277
41	13	12	0.79447807289106
42	13	14	0.81085728288724
43	14	15	1.2276309677397
44	15	4	1.2420745792812
46	44	43	0.36175875168002
48	41	40	0.12346902222006
49	40	39	0.2633129558367
50	40	42	1.2112311618506
51	39	38	0.25288326549642
52	38	34	1.5103098380614
53	34	33	0.50441754572619
54	33	35	0.50916271781338
55	33	32	0.43140835249664
56	32	31	0.16170816608298
57	31	30	0.3426329277853
58	30	36	0.408031947068
59	30	29	0.21896575887721
60	29	28	0.21961410246216
61	28	23	0.19262072069475
62	23	22	0.18458604959251
63	22	21	0.27808551604395
64	21	20	0.31311765181221
65	20	19	0.28069872028793
66	19	24	0.51990350626981
67	19	18	0.46219443988429
68	18	17	0.93384131931054
69	17	16	0.62195407418039
70	16	15	1.5516846232479
71	16	5	0.97509072331299
72	5	69	0.95367585885065
73	69	70	0.98579882781892
74	70	71	1.3413050853548
75	71	6	1.9593945353748
76	71	72	1.8229544929808
77	72	73	0.83393888274107
78	73	7	1.1165319395159
79	72	74	0.9966250970994
80	74	75	1.1477717142113
81	75	76	1.0413662555522
82	76	77	1.3846945490631
83	76	85	0.90016740259675
84	85	86	2.3621290905309
85	86	10	2.4617228442792
86	77	136	1.6076481794029
87	136	71	1.8069101531235
88	136	74	1.393796451943
89	77	78	1.329697414698
90	77	84	1.1390726915265
91	84	83	1.3230147652639
92	83	82	1.3210105086794
93	82	81	1.5569787733312
94	81	78	0.88956841828431
95	78	79	1.2046836291189
96	79	80	1.1387151095263
97	80	70	1.0882983636237
99	45	46	0.6062413377149
100	46	56	0.16057651443418
101	46	47	0.57115777300414
102	47	48	0.17434635562944
103	47	53	0.35550311835213
104	53	50	0.77778096737762
105	53	54	0.30420491159863
106	54	55	0.44813853673081
107	50	51	0.18253794182489
108	51	49	0.1669691630333
109	49	48	1.1064697752508
110	56	57	0.24298690234025
111	57	58	0.23419778250667
112	57	60	0.17239573432099
113	60	61	0.20462235354143
114	61	58	0.25802323602344
115	61	62	0.78052448904953
116	58	59	0.54923410733069
117	63	64	0.44550276231
118	63	62	1.1008996812835
119	52	64	0.1645821386781
120	64	50	0.83327214061709
121	51	52	0.86221172134126
122	64	65	0.13422456652872
123	65	66	0.24907543615379
124	66	67	0.26738350717937
125	67	68	1.5080031993697
126	101	102	0.606512038327
127	102	103	0.24128912845229
128	103	104	0.57785718840863
129	104	105	0.13698498970903
130	105	106	0.070750097993324
131	106	107	0.33633400484351
132	106	108	0.17990941156676
133	108	109	0.18454738217575
134	108	113	0.32001977222387
135	113	118	0.37233604012965
136	113	114	0.51215845392626
137	114	117	0.11187959206209
138	117	119	0.27329103632554
139	117	120	0.26631328562821
140	120	118	0.49553376427467
141	118	128	0.34623440125454
142	128	129	0.38686943095925
143	128	127	0.47390851503224
144	127	121	0.34472746447179
145	121	120	0.20947124346615
146	121	122	0.26162418253894
147	122	123	0.43875850603443
148	123	111	0.34625874360032
149	123	124	0.45058873258917
150	124	125	0.10153893915443
151	125	126	0.12950138813938
152	111	112	0.34801976045497
153	111	112	0.34801976045497
154	112	115	0.32205874505534
155	115	110	0.082429475671886
156	110	116	0.23821058495364
157	110	109	0.27665013090513
158	109	111	0.33130766084429
159	105	130	0.82410091355752
160	130	131	0.18025511007777
161	131	132	0.2877229171678
162	132	133	0.18383817402057
163	133	134	0.23927465233555
164	134	135	0.12499048844717
165	135	132	0.2569014215689
166	18	137	0.86949470475145
167	137	138	0.26785782930744
168	138	139	0.51026176602466
169	139	140	0.31507925616935
170	140	137	0.32250655419855
171	141	139	0.28806949227532
172	141	142	0.38931509241595
173	142	143	0.47947460093862
174	143	144	0.14475709129637
175	144	145	0.35274898833422
176	145	146	0.19104699567286
177	146	147	0.092893864947322
178	147	148	0.11193793128418
179	148	162	0.12569821030025
180	162	165	0.30238939989647
181	165	166	0.14682116959127
182	166	167	0.21877963345216
183	166	163	0.32864864476021
184	163	164	0.19836025514823
185	163	162	0.1610227308003
186	149	148	0.39989500799364
187	150	151	0.19304947320769
188	150	152	0.40318336358629
189	152	153	0.099108346968964
190	153	154	0.17648563285116
191	154	155	0.094898883433487
192	153	156	0.53228068483802
193	156	157	0.079545320965246
194	157	158	0.26248206668034
195	152	160	0.16791694911486
196	160	161	0.11515970397968
197	161	141	0.16689577138746
198	160	159	0.26769203189633
199	159	149	0.14927130122094
200	149	150	0.22592546461753
201	138	168	1.1632137031926
202	168	169	0.55241606245937
203	169	170	2.2722100777547
204	170	171	1.2141958189834
205	171	82	1.4327681029633
206	171	172	0.26465536754956
207	172	173	0.21283514205219
208	173	174	0.26542102257471
209	173	175	0.26942861916195
210	175	176	0.28214056348523
211	176	177	0.23343702716063
212	177	178	0.17422487370942
213	178	179	0.43559067825923
214	175	180	0.35433494286687
215	180	182	0.24267416179547
216	180	181	0.81725058129326
217	181	183	0.31598738692535
218	183	171	1.1170066848555
219	3	228	0.92449019851606
220	228	12	0.46445073032436
221	228	227	0.31678582987542
222	227	226	0.11769598304189
223	226	224	0.33885351559439
224	226	223	0.37216092470688
225	223	224	0.16161668372351
226	224	225	0.27853710563701
227	223	222	0.56900353348291
228	222	220	0.64744467568736
229	220	221	0.2723300227123
230	220	219	0.42136967600824
231	219	218	1.1079165162515
232	218	217	0.69548414064673
233	217	215	0.17408834697593
234	215	216	0.36182342982882
235	215	98	0.40125774090352
236	36	193	0.36908458398604
239	193	195	0.070753404104056
240	28	184	0.046982327931263
241	184	185	0.22063085061166
242	185	186	0.099525572504595
243	186	187	0.059176574279391
244	186	189	0.32679065423501
245	189	24	0.44347094163995
246	24	192	0.10110259108411
247	187	188	0.46658072254385
248	187	190	0.2095965415654
249	190	191	0.15973683563934
250	34	197	0.061617291715124
251	197	198	0.072142852068344
252	198	199	0.1906123949657
253	199	200	0.33113016441731
254	45	201	0.315957652937
255	201	202	0.18056591015024
256	41	229	0.22529949825926
257	229	45	0.27819067757908
258	229	203	0.13847407295703
259	203	204	0.088165584003724
260	204	205	0.46565741169843
261	205	206	1.0419934386426
262	207	208	0.72028403778081
263	208	209	0.30157120340095
264	209	210	0.72205888780194
265	210	211	0.20837719661223
266	211	212	0.2366146107286
267	212	213	0.36688284801469
268	230	41	0.31274266723023
269	230	43	0.43103920773693
270	230	207	0.12698677681665
271	194	193	0.19681229801905
\.


--
-- Data for Name: failed_jobs; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.failed_jobs (id, uuid, connection, queue, payload, exception, failed_at) FROM stdin;
\.


--
-- Data for Name: menu_order; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.menu_order (order_id, menu_id, amount, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: menus; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.menus (id, created_at, updated_at, shop_id, price, status, name, description, img_url) FROM stdin;
1	2023-05-11 07:39:20	2023-05-11 07:39:20	1	8000	ready	곡물빵	곡물빵입니다.	https://images.unsplash.com/photo-1537200275355-4f0c0714f777?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80
2	2023-05-11 07:41:25	2023-05-11 07:41:25	1	18000	ready	나폴리 피자	이탈리아 나폴리 피자입니다.	https://images.unsplash.com/photo-1604068549290-dea0e4a305ca?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1074&q=80
3	2023-05-11 07:43:58	2023-05-11 07:43:58	1	5400	ready	초코도넛3EA	초코 코팅된 도넛입니다.	https://images.unsplash.com/photo-1630150275481-fdd323506564?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1508&q=80
4	2023-05-11 08:08:03	2023-05-11 08:08:03	3	4500	ready	아이스 아메리카노 - 톨	톨 사이즈 입니다.	https://image.istarbucks.co.kr/upload/store/skuimg/2021/04/[110563]_20210426095937808.jpg
5	2023-05-11 08:08:39	2023-05-11 08:08:39	3	5000	ready	돌체 콜드 브루 - 톨	톨 사이즈 입니다.	https://image.istarbucks.co.kr/upload/store/skuimg/2021/04/[9200000002081]_20210415133656839.jpg
6	2023-05-11 08:09:02	2023-05-11 08:09:02	3	5300	ready	캬라멜 마키야또 - 톨	톨 사이즈 입니다.	https://image.istarbucks.co.kr/upload/store/skuimg/2021/04/[126197]_20210415154609863.jpg
7	2023-05-11 08:09:42	2023-05-11 08:09:42	3	6000	ready	망고 패션 티 블렌디드	망고 음료	https://image.istarbucks.co.kr/upload/store/skuimg/2023/02/[9200000004512]_20230207150514347.jpg
8	2023-05-11 08:10:26	2023-05-11 08:10:26	2	30000	ready	일식	일식 뷔페	http://www.grandapple.co.kr/new_image/visual/main01_view0101.jpg
9	2023-05-11 08:10:52	2023-05-11 08:10:52	2	38000	ready	중식	중식 뷔페	http://www.grandapple.co.kr/new_image/visual/main01_view0206.jpg
10	2023-05-11 08:11:05	2023-05-11 08:11:05	2	27000	ready	한식	한식 뷔페	http://www.grandapple.co.kr/new_image/visual/main01_view0301.jpg
11	2023-05-11 08:11:26	2023-05-11 08:11:26	2	16000	ready	파스타	파스타	http://www.grandapple.co.kr/new_image/visual/main01_view0503.jpg
\.


--
-- Data for Name: migrations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.migrations (id, migration, batch) FROM stdin;
5	2014_10_12_000000_create_users_table	1
166	2014_10_12_100000_create_password_resets_table	2
167	2019_08_19_000000_create_failed_jobs_table	2
168	2019_12_14_000001_create_personal_access_tokens_table	2
169	2023_05_03_102912_create_admins_table	2
170	2023_05_03_102958_create_customers_table	2
171	2023_05_03_110003_create_shops_table	2
172	2023_05_03_110130_create_reviews_table	2
173	2023_05_03_161653_create_menus_table	2
174	2023_05_03_161711_create_orders_table	2
175	2023_05_03_172143_create_menu_order_table	2
176	2023_05_04_165040_create_nodes_table	2
177	2023_05_04_165337_create_edges_table	2
\.


--
-- Data for Name: nodes; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.nodes (id, name, node) FROM stdin;
1	부산 해운대구 우동 1524	0101000020E6100000571EA2D2332460401ABBC24FD4954140
2	부산광역시 해운대구 센텀남대로 지하 76	0101000020E61000000F4964453C24604064F80799AA954140
3	부산 해운대구 우동 1524123	0101000020E61000007416E50C46246040EBDDC29CBF954140
4	부산 해운대구 우동 1524z	0101000020E6100000C1A80B823D246040A1622FABE8954140
5	대워월드마크센텀 부산 해운대구 우동 1524	0101000020E61000000771948F35246040218F24FC0F964140
6	KNN뒷편 부산 해운대구 우동 1524	0101000020E610000061F40AF02B2460402131A4CFFA954140
7	부산 해운대구 우동 1524	0101000020E6100000AD5CC5431E246040F0EEB818DE954140
8	부산 해운대구 우동 1524	0101000020E6100000D439B31B25246040D669FD47BD954140
9	부산 해운대구 우동 1524	0101000020E6100000715890E116246040B5F92F3E9E954140
10	부산 해운대구 우동 1524	0101000020E61000007DD4DEE50F246040CDC95954BE954140
11	부산 해운대구 우동 1524	0101000020E6100000CA8394A2302460406A80B4E7D4954140
12	부산 해운대구 우동 1524	0101000020E610000071270D0450246040B526B592D5954140
13	부산 해운대구 우동 1124-1	0101000020E6100000411C6C80552460400FBBD694E3954140
14	부산 해운대구 우동 1214-10	0101000020E6100000DD8749384F246040C7B9FC37EC954140
15	부산 해운대구 우동 1214-10	0101000020E6100000C0940B3046246040832E89E8FD954140
16	부산 해운대구 우동 1214-10	0101000020E61000003FD642953C2460405A7BE3361F964140
17	부산 해운대구 우동 1214-10	0101000020E6100000E7DEF62C392460405675CF5D2E964140
18	부산 해운대구 우동 1231	0101000020E6100000F2F1425F36246040FCE171D64A964140
19	부산 해운대구 우동 1205-1	0101000020E6100000505A36D4392460402C6C470451964140
20	부산 해운대구 우동 1205	0101000020E6100000DEE8949C3B2460408099F4344B964140
21	부산 해운대구 우동 1205	0101000020E6100000FD8EFB733D2460409309661044964140
22	부산 해운대구 우동 1205	0101000020E6100000A439774E3F246040F6C414C43E964140
23	부산 해운대구 우동 1205	0101000020E6100000501C59BB40246040A34203BF3C964140
24	부산 해운대구 우동 1229-7	0101000020E61000007E02FE753D2460404BD12EEA59964140
28	부산 해운대구 우동 1203	0101000020E610000005A8ABAF41246040FC26C9C541964140
29	부산 해운대구 우동 1203	0101000020E61000001C069654432460406EF5FBD93E964140
30	부산 해운대구 우동 1207-15	0101000020E6100000FFC7C3C143246040DF2BD7E137964140
31	부산 해운대구 우동 1207-27	0101000020E610000094A2A77442246040B34022EF2D964140
32	부산 해운대구 우동 1207-18	0101000020E6100000CDACEB3043246040E25EDC8629964140
33	부산 해운대구 우동 1209-61	0101000020E610000080B5339B46246040AC39EAE325964140
34	부산 해운대구 우동 1213-37	0101000020E6100000084D9A014A246040F6E7277F1C964140
35	부산 해운대구 우동 1209-52	0101000020E610000002C299C24624604080E52C9036964140
36	부산 해운대구 우동 1209-37	0101000020E610000032A2D7D846246040359AC4FA3C964140
38	부산 해운대구 우동 1194-4	0101000020E610000002F3AA4A552460407DEB3B3608964140
39	부산 해운대구 우동 1112-14	0101000020E6100000A208B05357246040122668AA06964140
40	부산 해운대구 우동 1104-18	0101000020E6100000BD95CF7B592460400636738306964140
41	부산 해운대구 우동 산 153-15	0101000020E61000001100BE7E5A2460402CBB138406964140
42	부산 해운대구 우동 1216	0101000020E610000020596DD250246040FF3D11E019964140
43	부산 해운대구 우동 1119-37	0101000020E61000004A3D2537592460402A6A1DB0EE954140
44	부산 해운대구 우동 1124-1	0101000020E610000091D2DF8257246040BA2469FDE4954140
45	부산 해운대구 우동 1104-1	0101000020E6100000B04389665A246040713B20FC16964140
46	부산광역시 해운대구 해운대로349번길 24	0101000020E610000096B703545A246040525F19D92A964140
47	부산광역시 해운대구 해운대로349번길 24	0101000020E6100000D68888015F2460401A0791412B964140
48	부산광역시 해운대구 해운대로349번길 24	0101000020E6100000567746205F2460407E91389025964140
49	부산광역시 해운대구 해운대로349번길 24	0101000020E6100000190C4B306824604004A3964026964140
50	부산광역시 해운대구 해운대로349번길 24	0101000020E610000072662C4768246040ED9B9F092D964140
51	부산광역시 해운대구 해운대로349번길 24	0101000020E6100000F712106069246040B2E845F928964140
52	부산광역시 해운대구 해운대로349번길 24	0101000020E61000000E11F0D16E24604000DF81F83A964140
53	부산광역시 해운대구 해운대로349번길 24	0101000020E6100000507930E96124604038E3A5152C964140
54	부산광역시 해운대구 해운대로349번길 24	0101000020E61000000B93DFE261246040E31F600D36964140
55	부산광역시 해운대구 해운대로349번길 24	0101000020E6100000E708D58D65246040485DDCAD36964140
56	부산광역시 해운대구 해운대로349번길 24	0101000020E6100000065AC71A59246040F67DA9C72C964140
57	부산광역시 해운대구 해운대로349번길 24	0101000020E6100000EEC2FBE2582460408AF9B9B134964140
58	부산광역시 해운대구 해운대로349번길 24	0101000020E61000001D8EF6CC5A24604059873C3935964140
59	부산광역시 해운대구 해운대로349번길 24	0101000020E6100000B3BA794C5F24604006DEF2A435964140
60	부산광역시 해운대구 해운대로349번길 24	0101000020E6100000657444315924604098E094353A964140
61	부산광역시 해운대구 해운대로349번길 24	0101000020E6100000B87089A15A246040C185B7A63D964140
62	부산광역시 해운대구 해운대로349번길 24	0101000020E6100000FF744805612460401330559A3E964140
63	부산광역시 해운대구 해운대로349번길 24	0101000020E6100000D132B2096A24604012279A383F964140
64	부산광역시 해운대구 해운대로349번길 24	0101000020E6100000956371AB6D24604039758DC83D964140
65	부산광역시 해운대구 해운대로349번길 24	0101000020E6100000DD8637A66E2460407293FDC73F964140
66	부산광역시 해운대구 해운대로349번길 24	0101000020E6100000A0E4068970246040F32768E542964140
67	부산광역시 해운대구 해운대로349번길 24	0101000020E610000003136E5D722460402E0380B647964140
68	부산광역시 해운대구 해운대로349번길 24	0101000020E6100000B6525DD57B2460404CC38C7367964140
69	부산 해운대구 우동 1524	0101000020E61000000F0BF99730246040C61FF61A28964140
70	부산 해운대구 우동 1524	0101000020E6100000CB1332212B24604099A436E43F964140
71	부산 해운대구 우동 1524	0101000020E6100000C1DB9C6B21246040BF5759502B964140
72	부산 해운대구 우동 1524	0101000020E6100000228A6C2E14246040BD60F4AC0F964140
73	부산 해운대구 우동 1524	0101000020E61000008BA2597E1824604025A21A7BFA954140
74	부산 해운대구 우동 1524	0101000020E6100000C8BA15060D2460400554C9621F964140
75	부산 해운대구 우동 1524	0101000020E6100000B50E9AB504246040BBDAECF230964140
76	부산 해운대구 우동 1524	0101000020E610000082586F6EFE236040B8B6940D48964140
77	부산 해운대구 우동 1524	0101000020E610000020811A7008246040E16B566C5D964140
78	부산 해운대구 우동 1524	0101000020E6100000F502F11312246040E2F11AB671964140
79	부산 해운대구 우동 1524	0101000020E61000008299F0311B2460404A59F29962964140
80	부산 해운대구 우동 1524	0101000020E61000004362BCCC2324604068F9043154964140
81	부산 해운대구 재송동 1199	0101000020E6100000A20DC66F0D246040DAE81E2F88964140
82	부산 해운대구 재송동 1199	0101000020E6100000E76C9E60052460405D8068BAAF964140
83	부산 해운대구 재송동 1199	0101000020E61000005E7BBABDFB236040F97AA3079C964140
84	부산 해운대구 재송동 1199	0101000020E6100000CA334A4202246040D398886479964140
85	부산 해운대구 재송동 1199	0101000020E6100000755B81C3F723604003175B743B964140
86	부산 해운대구 우동 1524	0101000020E61000008FCA774503246040C555133AFD954140
87	부산 해운대구 우동 1291	0101000020E61000005382002E21246040E70636B76E954140
88	부산 해운대구 우동 1524	0101000020E6100000699E6A852A246040BFC1582382954140
89	부산 해운대구 우동 1524	0101000020E6100000611AD2A83424604042DD56C84E954140
90	부산 해운대구 우동 1291	0101000020E6100000B1F4EB232B24604001CD17AB3B954140
91	부산 해운대구 우동 1524	0101000020E61000001B1536A53D24604038FCE2D162954140
92	부산 해운대구 우동 1524	0101000020E6100000B2F268AB462460403A1C14D275954140
93	부산 해운대구 우동 1524	0101000020E61000000E5F8D3233246040AEAA8CEF96954140
94	부산 해운대구 우동 1291-33	0101000020E6100000377448784E2460408B034D3650954140
95	부산 해운대구 우동 1291-33	0101000020E61000009A2ED8CE3224604099BE835D16954140
96	부산 해운대구 우동 1291-33	0101000020E61000008B577B243C2460401E5508C128954140
97	부산 해운대구 우동 1291-33	0101000020E61000004BF0625845246040DFBA39983B954140
98	부산 해운대구 우동 1135-23	0101000020E61000002DA181466A246040F4E90B3A8B954140
99	부산광역시 해운대구 해운대로 396	0101000020E61000001859F2C8702460402ACB188D9E954140
100	부산 해운대구 우동 1126-9	0101000020E610000008332F4B6324604011D16AB7CD954140
101	부산 해운대구 우동 1124-3	0101000020E610000065947A1D6024604023CAF893D6954140
102	부산 해운대구 우동 1111-2	0101000020E610000073B02ABE6224604034280372E7954140
103	부산광역시 해운대구 해운대로 361	0101000020E610000041FBFF0F64246040A819EE54ED954140
104	부산광역시 해운대구 해운대로 361	0101000020E610000087A3EAAC682460408BA93D95F1954140
105	부산광역시 해운대구 해운대로 361	0101000020E61000001EFF6A9769246040335F052DF4954140
106	부산광역시 해운대구 해운대로 361	0101000020E6100000709E35266A246040B6B2BF8BF3954140
107	부산광역시 해운대구 해운대로 361	0101000020E6100000AA93E87E6824604078BAF0BAEA954140
108	부산광역시 해운대구 해운대로 361	0101000020E6100000F0FF52816B246040BAAA473CF1954140
109	부산광역시 해운대구 해운대로 361	0101000020E6100000CAEEB2CF6C246040EEAFB930EE954140
110	부산광역시 해운대구 해운대로 361	0101000020E6100000E2D621706B246040CE7A9EFAE6954140
111	부산광역시 해운대구 해운대로 361	0101000020E610000060D48A346F246040D45B3D13E9954140
112	부산광역시 해운대구 해운대로 361	0101000020E610000060AE9B6A6D246040D5F5FC31E0954140
113	부산광역시 해운대구 해운대로 361	0101000020E6100000E4F483276D246040686F1363F9954140
114	부산광역시 해운대구 해운대로 361	0101000020E610000004823AE170246040F2EEF5AAF1954140
115	부산광역시 해운대구 해운대로 361	0101000020E6100000CBB9A60A6B24604096E2D5CAE4954140
116	부산광역시 해운대구 해운대로 361	0101000020E61000002C9608376D246040A0F9C0C0E3954140
117	부산광역시 해운대구 해운대로 361	0101000020E6100000E44A767B71246040F289336EF4954140
118	부산광역시 해운대구 해운대로 361	0101000020E6100000067FD5256F246040184F1E9F02964140
119	부산광역시 해운대구 해운대로 361	0101000020E61000000D67687C6F2460405186EC7BF8954140
120	부산광역시 해운대구 해운대로 361	0101000020E61000002CEB68C972246040C02FD96CFB954140
121	부산광역시 해운대구 해운대로 361	0101000020E6100000B2CE6A5D74246040D7E0DABAF8954140
122	부산광역시 해운대구 해운대로 361	0101000020E6100000B4C00E3874246040498B482DF0954140
123	부산광역시 해운대구 해운대로 361	0101000020E6100000E0EC9FE0712460405BA8E244E5954140
124	부산광역시 해운대구 해운대로 361	0101000020E6100000FB3ABCD16F246040D1612F03D9954140
125	부산광역시 해운대구 해운대로 361	0101000020E6100000FD68ED8670246040C676B843D7954140
126	부산광역시 해운대구 해운대로 361	0101000020E6100000503034E06F246040C0A92CEAD3954140
127	부산광역시 해운대구 해운대로 361	0101000020E6100000F683585974246040EB29980604964140
128	부산광역시 해운대구 해운대로 361	0101000020E6100000E8F1A6EF7024604023C8796D0B964140
129	부산광역시 해운대구 해운대로 361	0101000020E6100000B7B215DE72246040CDB1837A15964140
130	부산광역시 해운대구 해운대로 361	0101000020E6100000B000B7556D246040B58408A60A964140
131	부산광역시 해운대구 해운대로 361	0101000020E6100000602FB5366C24604096FD1F7E0E964140
132	부산광역시 해운대구 해운대로 361	0101000020E61000003FD805976D246040BF1A912516964140
133	부산광역시 해운대구 해운대로 361	0101000020E6100000441B86EB6E2460401584455213964140
134	부산광역시 해운대구 해운대로 361	0101000020E6100000CEA0D80470246040BBEB59D019964140
135	부산광역시 해운대구 해운대로 361	0101000020E61000001B4A22226F246040A409A0DE1B964140
136	부산 해운대구 우동 1524	0101000020E610000024E4A7EF1324604003FDC0BC43964140
137	부산 해운대구 우동 산 155-5	0101000020E6100000C5251BDF3324604072A90C8465964140
138	부산 해운대구 우동 산 155-3	0101000020E61000000DB95BE932246040905A95686D964140
139	부산광역시 해운대구 해운대로 284	0101000020E61000000C99B2E12E246040B947B7F768964140
140	부산 해운대구 우동 1228-24	0101000020E61000004DC0933C31246040E0C3DCBD64964140
141	부산광역시 해운대구 해운대로 284	0101000020E6100000CDA0D7B32C2460402F2A35976C964140
142	부산광역시 해운대구 해운대로 284	0101000020E61000007C458F4D2E246040FD0907A077964140
143	부산광역시 해운대구 해운대로 284	0101000020E610000003956DA12A24604080F2E1327D964140
144	부산광역시 해운대구 해운대로 284	0101000020E6100000E46D207A292460409C2B4A197C964140
145	부산광역시 해운대구 해운대로 284	0101000020E6100000E9EA79BC262460409828E3C27F964140
146	부산광역시 해운대구 해운대로 284	0101000020E610000019612FFB2524604000511B477A964140
147	부산광역시 해운대구 해운대로 284	0101000020E6100000F276CD5125246040BD4328C678964140
148	부산광역시 해운대구 해운대로 284	0101000020E610000088617BEA24246040ED7BFF7A75964140
149	부산광역시 해운대구 해운대로 284	0101000020E61000001F532B03282460404105D03371964140
150	부산광역시 해운대구 해운대로 284	0101000020E6100000A76D673427246040893B9B8A6A964140
151	부산광역시 해운대구 해운대로 284	0101000020E610000022B8FD7226246040DB9FEFFB64964140
152	부산광역시 해운대구 해운대로 284	0101000020E61000008821B7522A2460401CA41E3066964140
153	부산광역시 해운대구 해운대로 284	0101000020E6100000C43DAFAF2A24604096038A4863964140
154	부산광역시 해운대구 해운대로 284	0101000020E610000034D2A2FA2924604013504A3D5E964140
155	부산광역시 해운대구 해운대로 284	0101000020E61000001C52703E29246040849B36405F964140
156	부산광역시 해운대구 해운대로 284	0101000020E61000008E1978C82E2460407D448B4F5D964140
157	부산광역시 해운대구 해운대로 284	0101000020E6100000F527436F2F2460404485CD435D964140
158	부산광역시 해운대구 해운대로 284	0101000020E61000002306167631246040C18209645A964140
159	부산광역시 해운대구 해운대로 284	0101000020E6100000DE598FE928246040A31A12E46D964140
160	부산광역시 해운대구 해운대로 284	0101000020E61000006E50E4FB2A246040F72C82036B964140
161	부산광역시 해운대구 해운대로 284	0101000020E61000006AB416692B246040796826616E964140
162	부산광역시 해운대구 해운대로 284	0101000020E6100000CF7D4A712424604004899AD271964140
163	부산광역시 해운대구 해운대로 284	0101000020E6100000AB8A01F6232460403E5A15E96C964140
164	부산광역시 해운대구 해운대로 284	0101000020E6100000CBA8961D23246040155A075C67964140
165	부산광역시 해운대구 해운대로 284	0101000020E61000001F9C8D1A22246040E1B8741675964140
166	부산광역시 해운대구 해운대로 284	0101000020E610000018035D782124604061B58DFF70964140
167	부산광역시 해운대구 해운대로 284	0101000020E61000002FCD55932024604055444CC96A964140
168	부산 해운대구 재송동 82-1	0101000020E6100000FA1620FE2C246040AD01B7478B964140
169	부산 해운대구 재송동 산 114	0101000020E6100000CB6E7B722924604042C7748796964140
170	부산 해운대구 재송동 93-4	0101000020E6100000D47BB9EB17246040C05B3A9BAF964140
171	부산 해운대구 재송동 93-1	0101000020E610000057E186B40F2460404D9EFB08C6964140
172	부산 해운대구 재송동 1229	0101000020E61000004BBD2B8E11246040AC524C8ECA964140
173	부산 해운대구 재송동 1229	0101000020E6100000AD22D10F132460405E833711CE964140
174	부산 해운대구 재송동 94-1	0101000020E61000000EF917FA1324604002EE842DC6964140
175	부산 해운대구 재송동 1229	0101000020E6100000733276EF14246040AC83E6BBD2964140
176	부산광역시 해운대구 해운대로 253	0101000020E6100000296AD80B172460400959E4F7CE964140
177	부산광역시 해운대구 해운대로 253	0101000020E6100000343B01F4182460409BA72E64CE964140
178	부산광역시 해운대구 해운대로 253	0101000020E61000008B5AE8491A2460401AD6C860CC964140
179	부산광역시 해운대구 해운대로 253	0101000020E6100000E664F80F1D246040E1A9F165C3964140
180	부산 해운대구 재송동 1229	0101000020E610000011FBD8AA122460401C04F5FAD9964140
181	부산 해운대구 재송동 978	0101000020E6100000B4079D630C2460402FC3B447E3964140
182	부산광역시 해운대구 해운대로219번길 21	0101000020E610000072E802CA132460404F70A18BE0964140
183	부산 해운대구 재송동 666-3	0101000020E6100000714592D1092460400171DD0EE2964140
184	부산 해운대구 우동 1203	0101000020E610000086A5619541246040A5319B4143964140
185	부산 해운대구 우동 1203	0101000020E6100000829672AD42246040AAE3D70249964140
186	부산 해운대구 우동 1203	0101000020E61000008FC621C4422460408D2CC6404C964140
187	부산 해운대구 우동 1203-2	0101000020E6100000508DE12743246040B0681E684D964140
188	부산 해운대구 우동 1209-32	0101000020E6100000478739B746246040DC9D33D747964140
189	부산 해운대구 우동 1203	0101000020E6100000165EDC8840246040B2FF1A2B52964140
190	부산 해운대구 우동 1203-2	0101000020E6100000CFBB008844246040FEC2828451964140
191	부산 해운대구 우동 1202-6	0101000020E6100000079FBE8A452460401DAC99D754964140
192	부산 해운대구 우동 1200	0101000020E6100000C0EA26193D246040ABD1A8E45C964140
193	부산 해운대구 우동 1209-42	0101000020E61000005440C1BA482460407A82967146964140
194	부산 해운대구 우동 1209-42	0101000020E6100000FADCB7404824604099F2C19A4C964140
195	부산광역시 해운대구 해운대로295번길 49-16	0101000020E6100000368F8D4949246040437755D045964140
197	부산 해운대구 우동 1209-73	0101000020E61000007F5175494A2460400FCAC02C1E964140
198	부산 해운대구 우동 1209-52	0101000020E6100000EE90EC804A246040A563CB5F20964140
199	부산 해운대구 우동 1209-52	0101000020E6100000C378253F492460400C53801424964140
200	부산 해운대구 우동 1209-52	0101000020E61000007977CA454924604043D218EE2E964140
201	부산 해운대구 우동 1104-1	0101000020E6100000650845D0572460406E5091A616964140
202	부산 해운대구 우동 1104-1	0101000020E6100000FFADA499562460400557424413964140
203	부산광역시 해운대구 해운대로349번길 10	0101000020E6100000A06067B15B246040E15476670E964140
204	부산광역시 해운대구 해운대로349번길 10	0101000020E6100000F52AF8A45B246040497B604911964140
205	부산광역시 해운대구 해운대로349번길 10	0101000020E6100000FC282A735F2460408E39CA5812964140
206	부산광역시 해운대구 해운대로349번길 10	0101000020E6100000D9095FFA672460405A24CDCF13964140
207	부산 해운대구 우동 1112-12	0101000020E61000001E9B3DEA5A246040F7A0231EFB954140
208	부산 해운대구 우동 1113	0101000020E61000001AA91A38602460400F4805C7F0954140
209	부산 해운대구 우동 1113	0101000020E6100000C44634A862246040AA318660F2954140
210	부산광역시 해운대구 해운대로349번길 10	0101000020E6100000CAC2E6616824604074A34A52F8954140
211	부산 해운대구 우동 1113	0101000020E6100000E3DD6FF369246040BA4C1204FB954140
212	부산광역시 해운대구 해운대로349번길 10	0101000020E61000009B1435846A246040AD3C956E02964140
213	부산광역시 해운대구 해운대로349번길 10	0101000020E61000005A6BF9416A246040937ECC680E964140
215	부산광역시 해운대구 APEC로 55	0101000020E61000009437D9696824604060FBF90F96954140
216	부산광역시 해운대구 APEC로 55	0101000020E6100000B1C9F3BF652460407CA38BDC90954140
217	부산광역시 해운대구 APEC로 55	0101000020E6100000E8E881B268246040517E1FA79B954140
218	부산광역시 해운대구 APEC로 55	0101000020E6100000F6C0C1C46524604062047233AF954140
219	부산광역시 해운대구 APEC로 55	0101000020E61000007E4732BE5F246040F48A9059CA954140
220	부산광역시 해운대구 APEC로 55	0101000020E61000004DB0B6645C246040AF57D1AFCD954140
221	부산광역시 해운대구 APEC로 55	0101000020E6100000F8CCFA9A5A246040F170A359C8954140
222	부산광역시 해운대구 APEC로 55	0101000020E61000008C278D18572460400DCC98B9CE954140
223	부산광역시 해운대구 APEC로 55	0101000020E610000017BAE382522460401633785BCB954140
224	부산광역시 해운대구 APEC로 55	0101000020E610000082991C4C5224604050FD8B21C6954140
225	부산광역시 해운대구 APEC로 55	0101000020E61000006C6BB10E54246040DE989652C0954140
226	부산광역시 해운대구 APEC로 55	0101000020E61000007EFF8E914F2460408DEE452BC8954140
227	부산광역시 해운대구 APEC로 55	0101000020E6100000EABCE8A34E24604071528E20C7954140
228	부산 해운대구 우동 1524	0101000020E6100000438B2AB54C2460400D41180ECE954140
229	부산 해운대구 우동 1104-1	0101000020E610000034ADD9905A246040C55DA3E40D964140
230	부산 해운대구 우동 1119-62	0101000020E610000001CD68EF592460401AA70284FC954140
\.


--
-- Data for Name: orders; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.orders (id, created_at, updated_at, shop_id, customer_id, price, comment, location, status) FROM stdin;
\.


--
-- Data for Name: password_resets; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.password_resets (email, token, created_at) FROM stdin;
\.


--
-- Data for Name: personal_access_tokens; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.personal_access_tokens (id, tokenable_type, tokenable_id, name, token, abilities, last_used_at, expires_at, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: reviews; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.reviews (id, created_at, updated_at, shop_id, customer_id, img_url, description, star) FROM stdin;
\.


--
-- Data for Name: shops; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.shops (id, created_at, updated_at, name, description, admin_id, contact, address, status, location) FROM stdin;
1	2023-05-11 07:02:37	2023-05-11 07:02:37	파리바게뜨 - 해운대점	해운대 파리바게트입니다.	1	051-445-8989	부산광역시 해운대구 센텀3로 26	ready	0101000020E61000004057D90A45246040A305B11F6A954140
2	2023-05-11 07:03:22	2023-05-11 07:03:22	그랜드애플	해운대 그랜드 애플입니다. 다양한 메뉴가 있습니다.	2	051-445-87162	부산광역시 해운대구 센텀1로 25	ready	0101000020E6100000C77060BE37246040DB3A18214C954140
3	2023-05-11 07:04:16	2023-05-11 07:04:16	스타벅스 - 해운대점	전세계 커피시장을 선두하는 스타벅스 해운대점 입니다.	3	051-3421-87162	부산광역시 해운대구 센텀중앙로 78	ready	0101000020E6100000A24A84C50D246040E78043FB5A964140
4	2023-05-11 07:05:35	2023-05-11 07:05:35	고봉민김밥인	고봉민김밥인 입니다. 대표메뉴는 참치김밥 입니다.	4	051-7721-87162	부산광역시 해운대구 센텀동로 25 고봉민김밥	ready	0101000020E61000008A9438DF32246040CBD8157A03964140
5	2023-05-11 07:06:04	2023-05-11 07:06:04	봉추찜닭	봉추찜닭입니다.	5	051-721-8262	부산광역시 해운대구 센텀동로 35 봉추찜닭	ready	0101000020E610000070FDA08E322460405018DD3A11964140
6	2023-05-11 07:07:44	2023-05-11 07:07:44	쌀통닭	쌀통닭 입니다. 전통 시장 통닭 판매합니다.	6	051-721-1878	부산광역시 해운대구 센텀동로 102 쌀통닭	ready	0101000020E6100000C08D12AD0824604078CE75F7A7964140
7	2023-05-11 07:08:37	2023-05-11 07:08:37	한솥도시락 - 해운대점	한솥도시락 해운대 점입니다.	9	051-412-1111	부산광역시 해운대구 센텀중앙로 90 한솥도시락	ready	0101000020E610000041AECBC90A246040521AE8BB69964140
8	2023-05-11 07:09:11	2023-05-11 07:09:11	피자알볼로 - 해운대점	피자알볼로 해운대 점입니다.	8	051-412-1125	부산광역시 해운대구 센텀북대로 60 피자알볼로	ready	0101000020E6100000E611A1DB04246040D80F94FCA4964140
9	2023-05-11 07:10:07	2023-05-11 07:10:07	이마트24 편의점 - 해운대	24시간 운영하는 이마트24 - 해운대점입니다.	10	051-3312-25211	부산광역시 해운대구 센텀중앙로 79 이마트24	ready	0101000020E6100000A99AD143082460409F4405AA50964140
10	2023-05-11 07:11:37	2023-05-11 07:11:37	롯데리아 - 해운대 홈플러스 점	신메뉴 김치불고기덮밥버거 출시!!!	7	051-7781-1560	부산광역시 해운대구 센텀동로 6 홈플러스내 롯데리아	ready	0101000020E6100000AC8ED6B646246040FBAA3E37CF954140
\.


--
-- Data for Name: spatial_ref_sys; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.spatial_ref_sys (srid, auth_name, auth_srid, srtext, proj4text) FROM stdin;
\.


--
-- Data for Name: topology; Type: TABLE DATA; Schema: topology; Owner: postgres
--

COPY topology.topology (id, name, srid, "precision", hasz) FROM stdin;
\.


--
-- Data for Name: layer; Type: TABLE DATA; Schema: topology; Owner: postgres
--

COPY topology.layer (topology_id, layer_id, schema_name, table_name, feature_column, feature_type, level, child_id) FROM stdin;
\.


--
-- Name: admins_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.admins_id_seq', 10, true);


--
-- Name: customers_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.customers_id_seq', 10, true);


--
-- Name: edges_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.edges_id_seq', 271, true);


--
-- Name: failed_jobs_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.failed_jobs_id_seq', 1, false);


--
-- Name: menus_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.menus_id_seq', 11, true);


--
-- Name: migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.migrations_id_seq', 177, true);


--
-- Name: nodes_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.nodes_id_seq', 230, true);


--
-- Name: orders_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.orders_id_seq', 1, false);


--
-- Name: personal_access_tokens_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.personal_access_tokens_id_seq', 1, false);


--
-- Name: reviews_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.reviews_id_seq', 1, false);


--
-- Name: shops_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.shops_id_seq', 10, true);


--
-- Name: admins admins_email_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.admins
    ADD CONSTRAINT admins_email_unique UNIQUE (email);


--
-- Name: admins admins_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.admins
    ADD CONSTRAINT admins_pkey PRIMARY KEY (id);


--
-- Name: customers customers_email_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customers
    ADD CONSTRAINT customers_email_unique UNIQUE (email);


--
-- Name: customers customers_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customers
    ADD CONSTRAINT customers_pkey PRIMARY KEY (id);


--
-- Name: edges edges_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.edges
    ADD CONSTRAINT edges_pkey PRIMARY KEY (id);


--
-- Name: failed_jobs failed_jobs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.failed_jobs
    ADD CONSTRAINT failed_jobs_pkey PRIMARY KEY (id);


--
-- Name: failed_jobs failed_jobs_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.failed_jobs
    ADD CONSTRAINT failed_jobs_uuid_unique UNIQUE (uuid);


--
-- Name: menu_order menu_order_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.menu_order
    ADD CONSTRAINT menu_order_pkey PRIMARY KEY (order_id, menu_id);


--
-- Name: menus menus_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.menus
    ADD CONSTRAINT menus_pkey PRIMARY KEY (id);


--
-- Name: migrations migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.migrations
    ADD CONSTRAINT migrations_pkey PRIMARY KEY (id);


--
-- Name: nodes nodes_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.nodes
    ADD CONSTRAINT nodes_pkey PRIMARY KEY (id);


--
-- Name: orders orders_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT orders_pkey PRIMARY KEY (id);


--
-- Name: password_resets password_resets_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.password_resets
    ADD CONSTRAINT password_resets_pkey PRIMARY KEY (email);


--
-- Name: personal_access_tokens personal_access_tokens_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.personal_access_tokens
    ADD CONSTRAINT personal_access_tokens_pkey PRIMARY KEY (id);


--
-- Name: personal_access_tokens personal_access_tokens_token_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.personal_access_tokens
    ADD CONSTRAINT personal_access_tokens_token_unique UNIQUE (token);


--
-- Name: reviews reviews_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reviews
    ADD CONSTRAINT reviews_pkey PRIMARY KEY (id);


--
-- Name: shops shops_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shops
    ADD CONSTRAINT shops_pkey PRIMARY KEY (id);


--
-- Name: menus_status_index; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX menus_status_index ON public.menus USING btree (status);


--
-- Name: personal_access_tokens_tokenable_type_tokenable_id_index; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX personal_access_tokens_tokenable_type_tokenable_id_index ON public.personal_access_tokens USING btree (tokenable_type, tokenable_id);


--
-- Name: shops_status_index; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shops_status_index ON public.shops USING btree (status);


--
-- Name: edges edges_from_node_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.edges
    ADD CONSTRAINT edges_from_node_id_foreign FOREIGN KEY (from_node_id) REFERENCES public.nodes(id);


--
-- Name: edges edges_to_node_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.edges
    ADD CONSTRAINT edges_to_node_id_foreign FOREIGN KEY (to_node_id) REFERENCES public.nodes(id);


--
-- Name: menu_order menu_order_menu_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.menu_order
    ADD CONSTRAINT menu_order_menu_id_foreign FOREIGN KEY (menu_id) REFERENCES public.menus(id);


--
-- Name: menu_order menu_order_order_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.menu_order
    ADD CONSTRAINT menu_order_order_id_foreign FOREIGN KEY (order_id) REFERENCES public.orders(id);


--
-- Name: menus menus_shop_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.menus
    ADD CONSTRAINT menus_shop_id_foreign FOREIGN KEY (shop_id) REFERENCES public.shops(id);


--
-- Name: orders orders_customer_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT orders_customer_id_foreign FOREIGN KEY (customer_id) REFERENCES public.customers(id);


--
-- Name: orders orders_shop_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT orders_shop_id_foreign FOREIGN KEY (shop_id) REFERENCES public.shops(id);


--
-- Name: reviews reviews_customer_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reviews
    ADD CONSTRAINT reviews_customer_id_foreign FOREIGN KEY (customer_id) REFERENCES public.customers(id);


--
-- Name: reviews reviews_shop_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reviews
    ADD CONSTRAINT reviews_shop_id_foreign FOREIGN KEY (shop_id) REFERENCES public.shops(id);


--
-- Name: shops shops_admin_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shops
    ADD CONSTRAINT shops_admin_id_foreign FOREIGN KEY (admin_id) REFERENCES public.admins(id);


--
-- PostgreSQL database dump complete
--

